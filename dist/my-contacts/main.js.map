{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact-details/contact-details.component.css","webpack:///./src/app/contact-details/contact-details.component.html","webpack:///./src/app/contact-details/contact-details.component.ts","webpack:///./src/app/contact-list/contact-list.component.css","webpack:///./src/app/contact-list/contact-list.component.html","webpack:///./src/app/contact-list/contact-list.component.ts","webpack:///./src/app/contact.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div>\\n  <app-header (searchtextchange)=\\\"searchTextChange($event)\\\"></app-header>\\n  <app-contact-list [datalist]=\\\"filterdList\\\" [totalcount]=\\\"contactList.length\\\" (onselect)=\\\"selectUser($event)\\\"></app-contact-list>\\n  <app-contact-details [selectedContact]=\\\"selectedUser\\\"></app-contact-details>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ContactService } from './contact.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'my-contacts';\n\n  contactList: any[]=[];\n  filterdList: any[]=[];\n  selectedUser: any;\n\n  constructor(private contactService: ContactService) {\n\n  }\n  ngOnInit() {\n    this.contactService.getContactList().subscribe((data: any) => {\n      this.contactList = data.People;\n      this.filterdList=data.People;\n      // this.contactStyles.height=((100/this.contactList.length)-2)+'%';\n    })\n  }\n\n  selectUser(user: any) {\n    this.selectedUser = user;\n  }\n\n  searchTextChange(searchtext: string) {\n    this.filterdList = this.contactList.filter((contact) => {\n      if (contact.name.indexOf(searchtext) > -1) {\n        return true;\n      } else {\n        return false;\n      }\n    })\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ContactListComponent } from './contact-list/contact-list.component';\nimport { ContactDetailsComponent } from './contact-details/contact-details.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ContactService } from './contact.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactListComponent,\n    ContactDetailsComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [ContactService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"table {\\r\\n    border-collapse: collapse;\\r\\n    border-spacing: 0;\\r\\n    width: 100%;\\r\\n    border: 1px solid #ddd;\\r\\n}\\r\\n\\r\\nthead{\\r\\n    background-color: lightgray\\r\\n}\\r\\n\\r\\nth, td {\\r\\n    text-align: left;\\r\\n    padding: 16px;\\r\\n}\\r\\n\\r\\ntr:nth-child(even) {\\r\\n    background-color: #f2f2f2\\r\\n}\\r\\n\\r\\n.button {\\r\\n    background-color: lightgray;\\r\\n    border: 1px solid gray;\\r\\n    color: black;\\r\\n    padding: 15px 32px;\\r\\n    text-align: center;\\r\\n    text-decoration: none;\\r\\n    display: inline-block;\\r\\n    font-size: 16px;\\r\\n    margin: 4px 2px;\\r\\n    cursor: pointer;\\r\\n    border-radius: 5px;\\r\\n    width: 200px;\\r\\n    height: 80px;\\r\\n    margin-top: 0px;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\\r\\n    transition: 0.3s;\\r\\n    width: 40%;\\r\\n}\\r\\n\\r\\n.card:hover {\\r\\n    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\\r\\n}\\r\\n\\r\\n.fa.fa-heart{\\r\\n    font-size: 40px;\\r\\n    color: lightgray;\\r\\n}\\r\\n\\r\\n.fa.fa-heart.checked {\\r\\n    color: black;\\r\\n}\"","module.exports = \"<div style=\\\"margin-left:25%;padding:20px 200px 20px 50px;height:auto;margin-top: 58px;overflow-x: hidden;overflow-y: auto;\\\">\\n    <div *ngIf=\\\"selectedContact\\\" style=\\\"padding:20px;\\\">\\n\\n\\n        <div>\\n            <div style=\\\"width: 20%;display: inline-block;height: 130px;float: left;\\\">\\n                <img [src]=\\\"selectedContact.img\\\" height=\\\"100%\\\" />\\n            </div>\\n            <div style=\\\"padding-left: 10px;width: 70%;display: inline-block;height: 130px;\\\">\\n                <div>\\n                    <input type=\\\"button\\\" class=\\\"button\\\" value=\\\"Send Message!\\\" />\\n                </div>\\n                <div style=\\\"margin-top:5px;\\\">\\n                    <span *ngFor=\\\"let item of ratings;let i=index\\\" \\n                    [className]=\\\"i<=(selectedContact.rating-1) ? 'fa fa-heart checked' : 'fa fa-heart'\\\"></span>\\n                    <!-- <span class=\\\"fa fa-heart checked\\\"></span>\\n                    <span class=\\\"fa fa-heart checked\\\"></span>\\n                    <span class=\\\"fa fa-heart\\\"></span>\\n                    <span class=\\\"fa fa-heart\\\"></span> -->\\n                </div>\\n            </div>\\n        </div>\\n        <p>{{selectedContact.Description}}</p>\\n\\n\\n        <table>\\n            <thead>\\n                <tr>\\n                    <th>Likes</th>\\n                    <th>Dislikes</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let item of selectedContact.Likes; let i = index\\\">\\n                    <td>{{item}}</td>\\n                    <td>{{selectedContact.Dislikes[i]}}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\"","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-details',\n  templateUrl: './contact-details.component.html',\n  styleUrls: ['./contact-details.component.css']\n})\nexport class ContactDetailsComponent implements OnChanges {\n\n  @Input() selectedContact:any;\n  likeAndDislike:any[];\n  ratings:any[]=[1,2,3,4,5];\n  constructor() { }\n\n  ngOnChanges(changes:SimpleChanges) {\n    for (let propName in changes){\n      let change = changes[propName];\n      let curVal  = change.currentValue;\n      if (propName === 'selectedContact'){\n        this.selectedContact=curVal;\n      }\n    }\n  }\n}\n","module.exports = \"ul {\\r\\n    list-style-type: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    width: 25%;\\r\\n    background-color: #f1f1f1;\\r\\n    position: fixed;\\r\\n    height: 100%;\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\nli{\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\nli a {\\r\\n    display: block;\\r\\n    color: #000;\\r\\n    padding: 0px;\\r\\n    text-decoration: none;\\r\\n    /* padding: 30px; */\\r\\n    border: 1px solid black;\\r\\n    border-top: none;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\nli:first-child a {\\r\\n    border-top: 1px solid black;\\r\\n }\\r\\n\\r\\nli a span{\\r\\n    position: relative;\\r\\n    top: 40%;\\r\\n}\\r\\n\\r\\nli a.active {\\r\\n    background-color: #ccc;\\r\\n    /* color: white; */\\r\\n}\\r\\n\\r\\nli a:hover:not(.active) {\\r\\n    background-color: #555;\\r\\n    color: white;\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<ul >\\n  <li [ngStyle]=\\\"contactStyles\\\" (click)=\\\"selectUser(contact)\\\" *ngFor=\\\"let contact of datalist\\\">\\n    <a [className]=\\\"contact==selectedUser? 'active' : ''\\\">\\n      <span>{{contact.name}}</span>\\n      <span [className]=\\\"contact==selectedUser? 'fa fa-caret-right' : 'fa '\\\"  \\n      style=\\\"float: right;padding-right: 10px;\\\"></span>\\n    </a>\\n  </li>\\n</ul>\"","import { Component, OnInit, Output, EventEmitter, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ContactService } from '../contact.service';\n\n@Component({\n  selector: 'app-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css']\n})\nexport class ContactListComponent implements OnChanges {\n\n  @Input() datalist:any[];\n  @Input() totalcount:number=0;\n  @Output() onselect=new EventEmitter();\n\n  contactStyles = {\n    'height': '10px'\n  };\n  selectedUser:any;\n\n  constructor() { }\n\n  ngOnInit(){\n    \n  }\n\n  ngOnChanges(changes:SimpleChanges) {\n    for (let propName in changes){\n      let change = changes[propName];\n      let curVal  = change.currentValue;\n      if (propName === 'datalist' && curVal){\n        this.datalist=curVal;\n        this.contactStyles.height=((100/this.totalcount)-2)+'%';\n      }\n    }\n  }\n\n  selectUser(user:any){\n    this.selectedUser=user;\n    this.onselect.emit(user);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  constructor(private http:HttpClient) { }\n\n  getContactList(): Observable<any> {\n    return this.http.get('./assets/people.json');\n  }\n}\n","module.exports = \".sticky {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    width: 100%;\\r\\n  }\\r\\n.topnav {\\r\\n  border: 1px solid black;\\r\\n    overflow: visible;\\r\\n    background-color: #e9e9e9;\\r\\n  }\\r\\n.topnav a {\\r\\n    float: left;\\r\\n    display: block;\\r\\n    color: black;\\r\\n    text-align: center;\\r\\n    padding: 14px 16px;\\r\\n    text-decoration: none;\\r\\n    font-size: 17px;\\r\\n  }\\r\\n.topnav a:hover {\\r\\n    background-color: #ddd;\\r\\n    color: black;\\r\\n  }\\r\\n.topnav a.active {\\r\\n    background-color: #2196F3;\\r\\n    color: white;\\r\\n  }\\r\\n.topnav .search-container {\\r\\n    padding: 10px 10px;\\r\\n    display: inline-block;\\r\\n    width: 20%;\\r\\n    /* float: left; */\\r\\n  }\\r\\n.topnav .user-container{\\r\\n    float: right;\\r\\n  }\\r\\n.topnav input[type=text] {\\r\\n    padding: 6px;\\r\\n    margin-top: 8px;\\r\\n    font-size: 13px;\\r\\n    border: 1px solid black;\\r\\n    border-radius: 5px;\\r\\n    width: 100%;\\r\\n  }\\r\\n.topnav .search-container button {\\r\\n    float: right;\\r\\n    padding: 6px 10px;\\r\\n    margin-top: 8px;\\r\\n    margin-right: 16px;\\r\\n    background: #ddd;\\r\\n    font-size: 17px;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n.topnav .search-container button:hover {\\r\\n    background: #ccc;\\r\\n  }\\r\\n@media screen and (max-width: 600px) {\\r\\n    .topnav .search-container {\\r\\n      float: none;\\r\\n    }\\r\\n    .topnav a, .topnav input[type=text], .topnav .search-container button {\\r\\n      float: none;\\r\\n      display: block;\\r\\n      text-align: left;\\r\\n      width: 100%;\\r\\n      margin: 0;\\r\\n      padding: 14px;\\r\\n    }\\r\\n    .topnav input[type=text] {\\r\\n      border: 1px solid #ccc;  \\r\\n    }\\r\\n  }\\r\\n.dropbtn {\\r\\n    background-color: transparent;\\r\\n    color: white;\\r\\n    padding: 0px;\\r\\n    font-size: 16px;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n    margin: 6px 20px 1px 5px;\\r\\n    height: 45px;\\r\\n}\\r\\n.dropdown {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n}\\r\\n.dropdown-content {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    right: 0;\\r\\n    background-color: #f9f9f9;\\r\\n    min-width: 160px;\\r\\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\r\\n    z-index: 1;\\r\\n}\\r\\n.dropdown-content span {\\r\\n    color: black;\\r\\n    padding: 12px 16px;\\r\\n    text-decoration: none;\\r\\n    display: block;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.dropdown-content span:hover {background-color: #f1f1f1;}\\r\\n.dropdown:hover .dropdown-content {\\r\\n    display: block;\\r\\n}\\r\\n.dropdown:hover .dropbtn {\\r\\n    background-color: #3e8e41;\\r\\n}\"","module.exports = \"<div class=\\\"header sticky topnav\\\">\\n    <div class=\\\"search-container\\\">\\n        <input type=\\\"text\\\" placeholder=\\\"Search..\\\" name=\\\"search\\\" (input)=\\\"onSearchChange($event.target.value)\\\">\\n    </div>\\n    <div class=\\\"user-container\\\">\\n        <div style=\\\"display: inline-block;margin-top: 18px;margin-right: 10px;\\\">\\n            <label>User Name</label>\\n        </div>\\n\\n        <div class=\\\"dropdown\\\" style=\\\"float:right;\\\">\\n            <button class=\\\"dropbtn\\\">\\n                <img src=\\\"./assets/user-dd.png\\\" style=\\\"height: 100%;\\\" />\\n            </button>\\n            <div class=\\\"dropdown-content\\\">\\n                <span href=\\\"#\\\">Rate this app</span>\\n                <span href=\\\"#\\\">Log out</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Output() searchtextchange=new EventEmitter();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onSearchChange(value:string){\n    this.searchtextchange.emit(value);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}